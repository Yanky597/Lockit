package com.mcon521.lockit.classes;

import java.util.ArrayList;
import java.util.Random;

public class Password {

    protected final String capital = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    protected final String lower = "abcdefghijklmnopqrstuvwxyz";
    protected final String num = "0123456789";
    protected final String special = "!#$%&*+-;<=>?@^_|-";

//    protected final String special = "!\"#$%&\'*+-/:;<=>?@^_|-";

    /* this is just easier then having to write it out in an array form*/
    protected final char [] captialLetters = capital.toCharArray();
    protected final char [] lowercaseLetters = lower.toCharArray();
    protected final char [] numbers = num.toCharArray();
    protected final char [] specialCharacters = special.toCharArray();

    public String newPassword(Password pass) {
        String word = "";
        for (char x : pass.getPassword()) {
            word += Character.toString(x);
        }
        return word;
    }


    protected ArrayList<Character> scramble(ArrayList<Character> password){
        /*
         * this method is used to scramble the password generated by the get password method so that it
         * it is not written in a uniform way
         * */

        int len = password.size();
        Random nextNum = new Random();

        for(int i = 0; i < len; i++){
            int num = nextNum.nextInt(len-1);
            char tmp = password.get(num);
            password.set(num, password.get(i));
            password.set(i, tmp);
        }

        return password;
    }

    public ArrayList<Character> getPassword(){

        ArrayList<Character> password = new ArrayList<Character>();

        // sets the password length to be in betw the max and the min
        int min = 12;
        int max = 20;

        // the size of the final password
        int passwordSize = (int)Math.floor(Math.random()*(max-min+1)+min);

        Random nextLetter = new Random();

        // will be used like a greedy algo to limit the amount of numbers added to the array list;
        int numbersLeft = passwordSize;


        // constrains the loop to specific dimensions
        int constraint = nextLetter.nextInt((passwordSize-4)) + 1;

        for(int i = 0; i <= constraint; i++){
            password.add(lowercaseLetters[(nextLetter.nextInt(lowercaseLetters.length))]);
        }

        numbersLeft -= constraint;

        // second constraint for the lowercase letters
        constraint = nextLetter.nextInt((numbersLeft - 2)) + 1;

        /*System.out.println("this is numbers left = " + numbersLeft);*/
        /*System.out.println("this is the constraint for the uppercase letters = " + constraint);*/

        for(int i = 0; i < constraint; i++){
            password.add(captialLetters[(nextLetter.nextInt(captialLetters.length))]);
        }

        numbersLeft -= constraint;

        // third constraint for the numbers
        constraint = nextLetter.nextInt((numbersLeft - 1)) + 1;

        for(int i = 0; i < constraint; i++){
            password.add(numbers[(nextLetter.nextInt(numbers.length))]);
        }

        numbersLeft -= constraint;

        // fourth constraint for the special characters

        constraint = numbersLeft;

        for(int i = 0; i < constraint; i++){
            password.add(specialCharacters[(nextLetter.nextInt(specialCharacters.length))]);
        }

        return scramble(password);
    }



}
